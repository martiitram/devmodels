name: deploy_pipeline

on:
  workflow_dispatch:

  push:
    branches: [ "main" ]


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: docker hub login
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: docker login --username=${{ secrets.DOCKER_USERNAME }} --password=$DOCKER_PASSWORD

## add blue_release tag to actual green_release
#      - name: pull green_release
#        run: docker pull nginx:green_release
#      - name: Tag actual green release with blue
#        run: docker tag martiitram/java-springboot-ci-cd-with-github-actions:green_release martiitram/java-springboot-ci-cd-with-github-actions:blue_release
#      - name: Push image with new tag
#        run: docker push martiitram/java-springboot-ci-cd-with-github-actions:blue_release

      - name: Build the Docker image
        run: docker build . --file Dockerfile -t martiitram/java-springboot-ci-cd-with-github-actions:$NOW
      - name: list docker images
        run: docker images
      - name: upload image to dockerhub
        run: docker push martiitram/java-springboot-ci-cd-with-github-actions:$NOW


      # add green_release to the new docker image
      - name: Tag new image with green_release
        run: docker tag martiitram/java-springboot-ci-cd-with-github-actions:$NOW martiitram/java-springboot-ci-cd-with-github-actions:green_release
      - name: Push image with new tag
        run: docker push martiitram/java-springboot-ci-cd-with-github-actions:green_release


      - name: update_open_shift_image_version
        run: sed -i "s/image_tag_to_replace/${NOW}/g" pipelineScripts/deployment.yml

      - name: login to OpenShift
        run: oc login --token=${{ secrets.OC_TOKEN }} --server=${{ secrets.OC_SERVER }}
      - name: deploy service to OpenShift
        run: oc apply -f pipelineScripts/service.yml
      - name: deploy deployment to OpenShift
        run: oc apply -f pipelineScripts/deployment.yml
      - name: deploy route to OpenShift
        run: oc apply -f pipelineScripts/route.yml
